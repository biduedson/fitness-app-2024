version: "3.8" # Define a versão do Docker Compose

services:
  app: # Nome do serviço para a aplicação Next.js
    build: # Inicia o processo de construção da imagem
      context: . # Usa o diretório atual como contexto de construção
      dockerfile: Dockerfile # Usa o Dockerfile localizado no diretório atual
    image: bdpcs214/nextjs-fitness-app-2024:latest # Nome da imagem no Docker Hub
    ports:
      - "3000:3000" # Mapeia a porta 3000 do contêiner para a porta 3000 do host
      - "5555:5555"
    depends_on:
      - db # Este serviço depende do serviço 'db', que é o banco de dados
    environment:
      DATABASE_URL: ${DATABASE_URL_PRODUCTION}
      # Define a URL de conexão com o banco de dados usando variáveis de ambiente
    command: sh -c "npx prisma migrate deploy && npm start"
    # Executa as migrações do Prisma antes de iniciar a aplicação

  db: # Serviço para o banco de dados PostgreSQL
    image: postgres:15 # Usa a imagem oficial do PostgreSQL versão 15
    environment:
      POSTGRES_USER: ${POSTGRES_USER} # Define o usuário do banco de dados
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD} # Define a senha do banco de dados
      POSTGRES_DB: ${POSTGRES_DB} # Define o nome do banco de dados
    volumes:
      - fitnessApp_data:/var/lib/postgresql/data # Define um volume para persistir os dados do banco

volumes:
  fitnessApp_data: # Volume nomeado para armazenar dados do banco de dados
